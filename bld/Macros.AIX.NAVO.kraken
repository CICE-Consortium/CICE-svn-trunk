#===============================================================================
# CVS $Id: Macros.AIX.NAVO.kraken,v 1.1 2006/08/25 20:29:10 eclare Exp $
# CVS $Source: /net/bob1/CVS-COSIM/cice/bld/Macros.AIX.NAVO.kraken,v $
# CVS $Name:  $
#===============================================================================
# Makefile macros for "kraken-sp4" at NAVO
#
# Notes:  (see xlf user's guide for the details)
#  -lmass          => IBM-tuned intrinsic lib
#  -qsmp=noauto    => enable SMP directives, but don't add any
#  -qstrict        => don't turn divides into multiplies, etc
#  -qhot           => higher-order-transformations (eg. loop padding)
#  -qalias=noaryoverlp => assume no array overlap wrt equivalance, etc
#  -qmaxmem=-1     => memory available to compiler during optimization
#  -qipa=level=2   => InterProcedure Analysis (eg. inlining) => slow compiles
#  -p -pg          => enable profiling (use in both FFLAGS and LDFLAGS)
#  -qreport        => for smp/omp only
#  -bmaxdata:0x80000000 => use maximum allowed data segment size
#  -g              => always leave it on because overhead is minimal (?)
#  -qflttrap=...   => enable default sigtrap (core dump)
#  -C              => runtime array bounds checking (runs slow)
#  -qinitauto=...  => initializes automatic variables
#===============================================================================

INCLDIR    := -I. -I/usr/include -I/usr/lpp/ppe.poe/include
SLIBS      := 
ULIBS      := 
CPP        := /lib/cpp
CPPFLAGS   := -P
CPPDEFS    := -DAIX 
#CFLAGS     := -c -O2 -DDISABLE_TIMERS
CFLAGS     := -c -O2
FIXEDFLAGS := -qsuffix=f=f   -qfixed=132
FREEFLAGS  := -qsuffix=f=f90 -qfree=f90
FC         := mpxlf90_r
FFLAGS     := -O3 -q64 -qstrict -qrealsize=8 -qarch=pwr4 -qtune=pwr4
MOD_SUFFIX := mod
LD         := $(FC)
LDFLAGS    := -q64

    CPPDEFS :=  $(CPPDEFS) -DNXGLOB=$(NXGLOB) -DNYGLOB=$(NYGLOB) \
                -DBLCKX=$(BLCKX) -DBLCKY=$(BLCKY) -DMXBLCKS=$(MXBLCKS)
#   CPPDEFS :=  $(CPPDEFS) -DAOMIP

ifeq ($(COMMDIR), mpi)
   SLIBS   :=  $(SLIBS) -lmpi
endif

ifeq ($(NETCDF), yes)
   CPPDEFS := $(CPPDEFS) -Dncdf
   INCLDIR := $(INCLDIR) -I/site/netcdf350_64/include 
   SLIBS   := $(SLIBS) -L/site/netcdf350_64/lib -lnetcdf
endif

ifeq ($(USE_ESMF), yes)
   CPPDEFS :=  $(CPPDEFS) -Duse_esmf
   INCLDIR :=  $(INCLDIR) -I /net/bob1/ESMF/esmf/mod/modO/Linux.intel.64.mauve
   SLIBS   :=  $(SLIBS) -L /net/bob1/ESMF/esmf/lib/libO/Linux.intel.64.mauve -lesmf -lcprts -lrt -ldl
endif
